local present, lualine = pcall(require, "lualine")
if not present then
    return
end

-- Color table for highlights
--[[ local colors = {
  bg = '#202328',
  fg = '#bbc2cf',
  yellow = '#ECBE7B',
  cyan = '#008080',
  darkblue = '#081633',
  green = '#98be65',
  orange = '#FF8800',
  violet = '#a9a1e1',
  magenta = '#c678dd',
  blue = '#51afef',
  red = '#ec5f67'
} ]]


-- doom
--[[ local colors = {
  bg = '#3b4252',
  fg = '#bbc2cf',
  yellow = '#ebcb8b',
  cyan = '#88c0d0',
  darkblue = '#5e81ac',
  green = '#a3be8c',
  orange = '#d08770',
  violet = '#81a1c1',
  magenta = '#b48ead',
  blue = '#8fbcbb',
  red = '#bf616a'
} ]]

-- custom zenburn
-- local colors = {
--   bg = '#242424',
--   fg = '#ccdc90',
--   yellow = '#ebcb8b',
--   cyan = '#88c0d0',
--   darkblue = '#5e81ac',
--   green = '#a3be8c',
--   orange = '#d08770',
--   violet = '#81a1c1',
--   magenta = '#b48ead',
--   blue = '#8fbcbb',
--   red = '#bf616a'
-- }

-- jellybeans
-- local colors = {
--   bg = '#242424',
--   fg = '#fafafa',
--   yellow = '#ffd57f',
--   cyan = '#88c0d0',
--   darkblue = '#5e81ac',
--   green = '#a3be8c',
--   orange = '#ffae57',
--   violet = '#81a1c1',
--   magenta = '#b48ead',
--   blue = '#8fbcbb',
--   red = '#bf616a'
-- }

-- zenburn
-- guifg=#9ece9e guibg=#242424
-- local colors = {
--   fg = '#7f9f7f',
--   bg = '#242424',
--   yellow = '#ebcb8b',
--   cyan = '#88c0d0',
--   darkblue = '#5e81ac',
--   green = '#a3be8c',
--   orange = '#d08770',
--   violet = '#81a1c1',
--   magenta = '#b48ead',
--   blue = '#8fbcbb',
--   red = '#bf616a'
-- }

local colors = {
  fg = '#262626',
  bg = '#87875f',
  yellow = '#87875f',
  cyan = '#5f8787',
  darkblue = '#5f87af',
  green = '#5f875f',
  orange   = '#FF8800',
  violet   = '#a9a1e1',
  magenta = '#b48ead',
  blue = '#8fbcbb',
  red = '#bf616a'
}

local conditions = {
  buffer_not_empty = function() return vim.fn.empty(vim.fn.expand('%:t')) ~= 1 end,
  hide_in_width = function() return vim.fn.winwidth(0) > 80 end,
  check_git_workspace = function()
    local filepath = vim.fn.expand('%:p:h')
    local gitdir = vim.fn.finddir('.git', filepath .. ';')
    return gitdir and #gitdir > 0 and #gitdir < #filepath
  end
}

-- Config
local config = {
  options = {
    -- Disable sections and component separators
    component_separators = "",
    section_separators = "",
    theme = {
      -- We are going to use lualine_c an lualine_x as left and
      -- right section. Both are highlighted by c theme .  So we
      -- are just setting default looks o statusline
      normal = {c = {fg = colors.fg, bg = colors.bg}},
      inactive = {c = {fg = colors.fg, bg = colors.bg}}
    }
  },
  sections = {
    -- these are to remove the defaults
    lualine_a = {},
    lualine_b = {},
    lualine_y = {},
    lualine_z = {},
    -- These will be filled later
    lualine_c = {},
    lualine_x = {}
  },
  inactive_sections = {
    -- these are to remove the defaults
    lualine_a = {},
    lualine_v = {},
    lualine_y = {},
    lualine_z = {},
    lualine_c = {},
    lualine_x = {}
  }
}

-- Inserts a component in lualine_c at left section
local function ins_left(component)
  table.insert(config.sections.lualine_c, component)
end

-- Inserts a component in lualine_x ot right section
local function ins_right(component)
  table.insert(config.sections.lualine_x, component)
end

-- ins_left {
--   function() return '▊' end,
--   color = {fg = colors.blue}, -- Sets highlighting of component
--   left_padding = 0 -- We don't need space before this
-- }

ins_left {
  -- mode component
  function()
    return ''
  end,
  color = function()
    -- auto change color according to neovims mode
    local mode_color = {
      n = colors.red,
      i = colors.green,
      v = colors.blue,
      [''] = colors.blue,
      V = colors.blue,
      c = colors.magenta,
      no = colors.red,
      s = colors.orange,
      S = colors.orange,
      [''] = colors.orange,
      ic = colors.yellow,
      R = colors.violet,
      Rv = colors.violet,
      cv = colors.red,
      ce = colors.red,
      r = colors.cyan,
      rm = colors.cyan,
      ['r?'] = colors.cyan,
      ['!'] = colors.red,
      t = colors.red,
    }
    return { fg = mode_color[vim.fn.mode()] }
  end,
  padding = { right = 1 },
}

-- ins_left {
--   -- mode component
--   function()
--     -- auto change color according to neovims mode
--     local mode_color = {
--       n = colors.red,
--       i = colors.green,
--       v = colors.blue,
--       [''] = colors.blue,
--       V = colors.blue,
--       c = colors.magenta,
--       no = colors.red,
--       s = colors.orange,
--       S = colors.orange,
--       [''] = colors.orange,
--       ic = colors.yellow,
--       R = colors.violet,
--       Rv = colors.violet,
--       cv = colors.red,
--       ce = colors.red,
--       r = colors.cyan,
--       rm = colors.cyan,
--       ['r?'] = colors.cyan,
--       ['!'] = colors.red,
--       t = colors.red
--     }
--     vim.api.nvim_command(
--         'hi! LualineMode guifg=' .. mode_color[vim.fn.mode()] .. " guibg=" ..
--             colors.bg .. ' ctermfg=' .. mode_color[vim.fn.mode()] .. ' ctermbg=' .. colors.bg)
--     return ''
--     -- return ''
--   end,
--   color = {fg = colors.black},
--   left_padding = 0
-- }

ins_left {
  -- Lsp server name .
  function()
    local msg = '(LSP inactive)'
    local buf_ft = vim.api.nvim_buf_get_option(0, 'filetype')
    local clients = vim.lsp.get_active_clients()
    if next(clients) == nil then return msg end
    for _, client in ipairs(clients) do
      local filetypes = client.config.filetypes
      if filetypes and vim.fn.index(filetypes, buf_ft) ~= -1 then
        return '(' .. client.name .. ')'
      end
    end
    return msg
  end,
  -- icon = ' :',
  -- color = {fg = '#d8dee9', gui = 'bold'}
  color = {fg = colors.black}
}

ins_left {'location'}

ins_left {'progress', color = {fg = colors.fg}}

-- Insert mid section. You can make any number of sections in neovim :)
-- for lualine it's any number greater then 2
ins_left {function() return '%=' end}

ins_left {
  'filename',
  cond = conditions.buffer_not_empty,
  color = {fg = colors.white}
}

-- Add components to right sections
-- ins_right {
--   'o:encoding', -- option component same as &encoding in viml
--   upper = true, -- I'm not sure why it's upper case either ;)
--   condition = conditions.hide_in_width,
--   color = {fg = colors.green, gui = 'bold'}
-- }

ins_right {
  'filetype',
  upper = true,
  icons_enabled = true,
  color = {fg = colors.green}
}

ins_right {
  'branch',
  icon = '',
  condition = conditions.check_git_workspace,
  color = {fg = colors.black}
}

ins_right {
  'diff',
  -- Is it me or the symbol for modified us really weird
  symbols = {added = ' ', modified = '柳', removed = ' '},
  color_added = colors.green,
  color_modified = colors.orange,
  color_removed = colors.red,
  condition = conditions.hide_in_width
}

-- ins_right {
--   function() return '▊' end,
--   color = {fg = colors.blue},
--   right_padding = 0
-- }

-- Now don't forget to initialize lualine
lualine.setup(config)
